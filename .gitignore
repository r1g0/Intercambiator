Skip to content
 

Searchâ€¦
All gists
GitHub
New gist
@r1g0
  Star 548
  Fork 297
  @adamgitadamgit/.gitignore
Last active 3 days ago
Embed  
<script src="https://gist.github.com/adamgit/3786883.js"></script>
  Download ZIP
 Code  Revisions 8  Stars 548  Forks 297
.gitignore file for Xcode4 / OS X Source projects
Raw  .gitignore
#########################
# .gitignore file for Xcode4 and Xcode5 Source projects
#
# Apple bugs, waiting for Apple to fix/respond:
#
#    15564624 - what does the xccheckout file in Xcode5 do? Where's the documentation?
#
# Version 2.6
# For latest version, see: http://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects
#
# 2015 updates:
# - Fixed typo in "xccheckout" line - thanks to @lyck for pointing it out!
# - Fixed the .idea optional ignore. Thanks to @hashier for pointing this out
# - Finally added "xccheckout" to the ignore. Apple still refuses to answer support requests about this, but in practice it seems you should ignore it.
# - minor tweaks from Jona and Coeur (slightly more precise xc* filtering/names)
# 2014 updates:
# - appended non-standard items DISABLED by default (uncomment if you use those tools)
# - removed the edit that an SO.com moderator made without bothering to ask me
# - researched CocoaPods .lock more carefully, thanks to Gokhan Celiker
# 2013 updates:
# - fixed the broken "save personal Schemes"
# - added line-by-line explanations for EVERYTHING (some were missing)
#
# NB: if you are storing "built" products, this WILL NOT WORK,
# and you should use a different .gitignore (or none at all)
# This file is for SOURCE projects, where there are many extra
# files that we want to exclude
#
#########################

#####
# OS X temporary files that should never be committed
#
# c.f. http://www.westwind.com/reference/os-x/invisibles.html

.DS_Store

# c.f. http://www.westwind.com/reference/os-x/invisibles.html

.Trashes

# c.f. http://www.westwind.com/reference/os-x/invisibles.html

*.swp

#
# *.lock - this is used and abused by many editors for many different things.
#    For the main ones I use (e.g. Eclipse), it should be excluded 
#    from source-control, but YMMV.
#   (lock files are usually local-only file-synchronization on the local FS that should NOT go in git)
# c.f. the "OPTIONAL" section at bottom though, for tool-specific variations!
#
# In particular, if you're using CocoaPods, you'll want to comment-out this line:
*.lock


#
# profile - REMOVED temporarily (on double-checking, I can't find it in OS X docs?)
#profile


####
# Xcode temporary files that should never be committed
# 
# NB: NIB/XIB files still exist even on Storyboard projects, so we want this...

*~.nib


####
# Xcode build files -
#
# NB: slash on the end, so we only remove the FOLDER, not any files that were badly named "DerivedData"

DerivedData/

# NB: slash on the end, so we only remove the FOLDER, not any files that were badly named "build"

build/


#####
# Xcode private settings (window sizes, bookmarks, breakpoints, custom executables, smart groups)
#
# This is complicated:
#
# SOMETIMES you need to put this file in version control.
# Apple designed it poorly - if you use "custom executables", they are
#  saved in this file.
# 99% of projects do NOT use those, so they do NOT want to version control this file.
#  ..but if you're in the 1%, comment out the line "*.pbxuser"

# .pbxuser: http://lists.apple.com/archives/xcode-users/2004/Jan/msg00193.html

*.pbxuser

# .mode1v3: http://lists.apple.com/archives/xcode-users/2007/Oct/msg00465.html

*.mode1v3

# .mode2v3: http://lists.apple.com/archives/xcode-users/2007/Oct/msg00465.html

*.mode2v3

# .perspectivev3: http://stackoverflow.com/questions/5223297/xcode-projects-what-is-a-perspectivev3-file

*.perspectivev3

#    NB: also, whitelist the default ones, some projects need to use these
!default.pbxuser
!default.mode1v3
!default.mode2v3
!default.perspectivev3


####
# Xcode 4 - semi-personal settings
#
# Apple Shared data that Apple put in the wrong folder
# c.f. http://stackoverflow.com/a/19260712/153422
#     FROM ANSWER: Apple says "don't ignore it"
#     FROM COMMENTS: Apple is wrong; Apple code is too buggy to trust; there are no known negative side-effects to ignoring Apple's unofficial advice and instead doing the thing that actively fixes bugs in Xcode
# Up to you, but ... current advice: ignore it.
*.xccheckout

#
#
# OPTION 1: ---------------------------------
#     throw away ALL personal settings (including custom schemes!
#     - unless they are "shared")
# As per build/ and DerivedData/, this ought to have a trailing slash
#
# NB: this is exclusive with OPTION 2 below
xcuserdata/

# OPTION 2: ---------------------------------
#     get rid of ALL personal settings, but KEEP SOME OF THEM
#     - NB: you must manually uncomment the bits you want to keep
#
# NB: this *requires* git v1.8.2 or above; you may need to upgrade to latest OS X,
#    or manually install git over the top of the OS X version
# NB: this is exclusive with OPTION 1 above
#
#xcuserdata/**/*

#     (requires option 2 above): Personal Schemes
#
#!xcuserdata/**/xcschemes/*

####
# XCode 4 workspaces - more detailed
#
# Workspaces are important! They are a core feature of Xcode - don't exclude them :)
#
# Workspace layout is quite spammy. For reference:
#
# /(root)/
#   /(project-name).xcodeproj/
#     project.pbxproj
#     /project.xcworkspace/
#       contents.xcworkspacedata
#       /xcuserdata/
#         /(your name)/xcuserdatad/
#           UserInterfaceState.xcuserstate
#     /xcshareddata/
#       /xcschemes/
#         (shared scheme name).xcscheme
#     /xcuserdata/
#       /(your name)/xcuserdatad/
#         (private scheme).xcscheme
#         xcschememanagement.plist
#
#

####
# Xcode 4 - Deprecated classes
#
# Allegedly, if you manually "deprecate" your classes, they get moved here.
#
# We're using source-control, so this is a "feature" that we do not want!

*.moved-aside

####
# OPTIONAL: Some well-known tools that people use side-by-side with Xcode / iOS development
#
# NB: I'd rather not include these here, but gitignore's design is weak and doesn't allow
#     modular gitignore: you have to put EVERYTHING in one file.
#
# COCOAPODS:
#
# c.f. http://guides.cocoapods.org/using/using-cocoapods.html#what-is-a-podfilelock
# c.f. http://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control
#
#!Podfile.lock
#
# RUBY:
#
# c.f. http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/
#
#!Gemfile.lock
#
# IDEA:
#
# c.f. https://www.jetbrains.com/objc/help/managing-projects-under-version-control.html?search=workspace.xml
# 
#.idea/workspace.xml
#
# TEXTMATE:
#
# -- UNVERIFIED: c.f. http://stackoverflow.com/a/50283/153422
#
#tm_build_errors

####
# UNKNOWN: recommended by others, but I can't discover what these files are
#
 @adamgit
Owner
adamgit commented on Jan 2, 2013
Done. Sorry, forgot to add at the time
@marzapower
marzapower commented on Jan 31, 2013
I suggest adding these lines, for those who currently use CocoaPods:

Pods/
Podfile.lock
@adamgit
Owner
adamgit commented on Feb 8, 2013
@marzapower thanks, updated with your comments from the SO answer
@rais38
rais38 commented on Apr 5, 2013
Podfile.lock contains the pod commit SHAs that just got installed so that you can easily restore that exact environment later on other machines (very important in teams). I think that this file must be removed from .gitignore
@matej
matej commented on Apr 8, 2013
I agree with @rais38, Podfile.lock should not be ignored any longer. See this issue for details.

It actually even needs to be explicitly allowed (by changing Podfile.lock to !Podfile.lock), so it does not get added by the *.lock declaration.
@tvon
tvon commented on Apr 16, 2013
:+1: on removing the Podfile.lock (and the *.lock line, Gemfile.lock is important if it exists).
@albertdrake
albertdrake commented on Aug 30, 2013
Does this pattern work for SVN?
@m2orris
m2orris commented on Sep 26, 2013
Seems Xcode 5 has added a new file type .xccheckout . There is a discussion about it at:

http://stackoverflow.com/questions/18340453/should-xccheckout-files-in-xcode5-be-ignored-under-vcs

Might also want to update your description: ".gitignore file for Xcode4 / OS X Source projects" and comments "Xcode 4" for Xcode 5.
@ghost
Unknown commented on Oct 1, 2013
As @m2orris mentions and this SO discussion states, Xcode introduced a new file type that should be ignored. Here you have the code to add in case you find it useful.

####
# Xcode 5 -  Source Control files
#
# Xcode 5 introduced a new file type .xccheckout. This files contains VCS metadata
# and should therefore not be checked into the VCS.

*.xccheckout
@dirtyhenry
dirtyhenry commented on Nov 21, 2013
+1 to remove the *.lock line (for Gemfile.lock and Podfile.lock)
@organizr
organizr commented on Dec 12, 2013
+1 to remove the *.lock line (for Gemfile.lock and Podfile.lock)

Also, I know not everyone will use AppCode IDE but, because it does not affect to include it and it can be helpful for the ones who do, I would recommend to include this:

####
# AppCode
#

.idea/
As suggested in this StackOverflow answer: http://stackoverflow.com/a/16062099

Otherwise, great. Thanks for this.
@versluis
versluis commented on Apr 11, 2014
Saves my life time and time again. Thanks!
@adamgit
Owner
adamgit commented on Oct 6, 2014
I've merged in all the outstanding items I could find and verify.

NOTE: for all the non-Apple tools, I've put them at the bottom commented out, titled by name. It should be easy this way for you to "enable" support for whichever combination of tools you're using. At the moment, it's mostly whitelisting on top of the catch-all blacklisting at top of the file.

I'm in two minds about ".lock" - it traditionally (in unix/BSD/linux world) means "something that should not go in source control - local file-locking on my computer only". Some apps still use it to mean that - I suspect MANY unix/BSD command-line apps still use it for this. Ruby seems to have redefined it to mean something different, almost the opposite (but even in Ruby, you are sometimes required to exclude it from git; it's complicated!).

Most iOS devs don't use Ruby. So, for now, I'm putting ".lock" as an exclusion, and the OPTIONAL ability to whitelist Ruby + Cocoapods proprietary lock files.
@galrito
galrito commented on Jan 2, 2015
Apple states that .xccheckout files should NOT be ignored.
If you have more than one repository associated with your Xcode project, they are saved as a .xccheckout file, so that if another person on your team checks out your git repository on Xcode, these other repositories are also checked out automatically.
See session 414 of WWDC 2013, named "Understanding Source Control in Xcode". That feature of Xcode is demoed there.
@adamgit
Owner
adamgit commented on Jul 1, 2015
@galrito - the problem is ... Apple refuses to document this, and in the meantime a few of us have seen serious problems caused by that stupid file.

Personal experience: cutting it out caused no problems.

As noted: I asked Apple about this well over a year ago, and they refused to answer, so ... please take it up with them!
@shahankit
shahankit commented on Jul 26, 2015
@adamgit does it work with xcode 6 ?
@adamgit
Owner
adamgit commented on Sep 25, 2015
@shahankit yes
@muhasturk
muhasturk commented on Oct 3, 2015
Are there any new items in Xcode 7.0.1 that we should ignore for VCS?
@Mazyod
Mazyod commented on Nov 18, 2015
I think timeline.xctimeline should be added
@r1g0
 Styling with Markdown is supported
Write Preview

Leave a comment
Attach files by dragging & dropping,  Choose Files selecting them, or pasting from the clipboard.
Comment
Status API Training Shop Blog About Pricing
Â© 2016 GitHub, Inc. Terms Privacy Security Contact Help